
//Criando um servidor WEB com Node.js

//INSTRU√á√ïES üëá

// 1¬∞ - CARREGAMOS NOSSO MODULO NA LINHA 1¬∞ üëá
const http = require('http');
//---------------------------------------

// 2¬∞ - DEPOIS CRIAMOS NOSSO "SERVIDOR" COM ESSE METODO üëá

/*E o "REQ" e "RES" s√£o exatamente isso, o req √© o request, o objeto de requisi√ß√£o, que cont√©m todos os dados relacionados a requisi√ß√£o.
O res √© o response, que √© a resposta que ser√° enviada para quem fez a solicita√ß√£o.*/


let server = http.createServer((req, res)=>{

    console.log('URL:', req.url);
    console.log('METHOD:', req.method);


// AQUI PODEMOS DETECTAR "URL" DIFERENTES üëáüíª
    switch (req.url) {

        case '/':

        res.statusCode = 200;
        res.setHeader('Content-type', 'text/html');
        res.end('<h1>ol√°</h1>');

        break;

        case '/users':

        res.statusCode = 200;
        res.setHeader('Content-type', 'text/html');
        res.end(JSON.stringify({
            users:[{
                name:'Alysson',
                email:'contato@alysson.com.br',
                id:1
            }] 
        }));
            
        break;

    }

});

//-----------------------------------------------------------------------------------------------------------------------------------------

// 3¬∞ - AQUI FAZEMOS O ENDERE√áO IP DO SERVIDOR
server.listen(3000, '127.0.0.1', ()=>{


    console.log('servidor rodando!');

});



//==========================================================================================================================================
// PARA TESTAR SE O SERVIDOR EST√Å RODANDO; (V√Å AT√â O TERMINAL DE COMANDO E DIGITE "node index")
// DEPOIS V√Å AT√â O NAVEGADOR WEB (GOOGLE CHROME) E DIGITE; "localhost:3000"


// INSTALANDO O "PACKAGE.JSON"

// NA PASTA ONDE EST√Å O SEU ARQUIVO "INDEX.JS" NO "CMD": DIGITE; "NPM INIT", DEPOIS CONFIGURE AS PERGUNTAS ETC!

/* Para que serce o package.json?

O package. json √© um arquivo de configura√ß√£o utilizado para estipular e configurar depend√™ncias
do seu projeto (quais outros pacotes ele vai precisar para ser executado) e scripts automatizados.
Atrav√©s dele conseguimos deixar claro uma "receita" para executar um projeto. O package. json √©
um arquivo de configura√ß√£o utilizado para estipular e configurar depend√™ncias do seu projeto
(quais outros pacotes ele vai precisar para ser executado) e scripts automatizados.
Atrav√©s dele conseguimos deixar claro uma "receita" para executar um projeto.*/


//INSTALANDO O "EXPRESS" NO PACKAGE.JSON: V√Å AT√â O CMD E DIGITE "NPM INSTALL EXPRESS --SAVE"

/* Para que serve o Express no node JS?

Express √© o framework Node mais popular e a biblioteca subjacente para uma s√©rie de outros frameworks
do Node. O Express oferece solu√ß√µes para: Gerenciar requisi√ß√µes de diferentes verbos HTTP em diferentes
URLs. Integrar "view engines" para inserir dados nos templates. */


